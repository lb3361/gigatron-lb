
Simple opcodes:

ENCODING           OPCODE     DESCRIPTION         
C141/ctrl(0x41)   --           no operation
C1d2/ctrl(0xd2)   ld(d,Z)      load immediate d into register Z
C151/ctrl(0x51)   ld(AC,Z)     copy AC into register Z
C161/ctrl(0x61)   ld(Y,Z)      copy Y into register Z
C171/ctrl(0x71)   ld(V,Z)      copy three upper bits of the current video bank into Z,
                               using AC<7> to decide whether targeting even or odd pixels.



Prefix opcodes:

       These change the addressing mode of the next
       opcode (load or store) as follows:

               [d],AC      -->  [Z,0,d],AC
               [X],AC      -->  [Z,0,X],AC
               [Y,d],AC    -->  [Z,Y,d],AC
               [Y,X],AC    -->  [Z,Y,X],AC
               [d],X       -->  [Z,0,d],X
               [d],Y       -->  [Z,0,d],Y
               [d],OUT     -->  [Z,0,d],OUT    (load only)
               [Y,X++],OUT -->  [Z,Y,X++],OUT  (load only)
               [Y,X++]     -->  [Z,Y,X++]      (store only)

ENCODING          OPCODE          DESCRIPTION         
C1c1/ctrl(0xc1)   far()            prefix for next insn
C1d3/ctrl(0xd2)   far(d,Z)         same as ld(d,Z) + prefix
C1d1/ctrl(0xd1)   far(AC,Z)        same as ld(AC,Z) + prefix
C1e1/ctrl(0xe1)   far(Y,Z)         same as ld(Y,Z) + prefix
C1f1/ctrl(0xf1)   far(V,Z)         same as ld(V,Z) + prefix


Reserved:

All instructions of the form ctrl(b) with b ~= 0b?0??0001

c101/ctrl(0x01)   inp()            prefix for i/o inputs (maybe)             

